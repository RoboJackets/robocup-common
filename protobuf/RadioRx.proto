syntax="proto2";
package Packet;

enum MotorStatus
{
    UNKNOWN = 0;
	Good = 1;
	Hall_Failure = 2;
	Stalled = 3;
	Encoder_Failure = 4;
}

enum BallSenseStatus
{
    UNKNOWN = 0;
	NoBall = 1;
	HasBall = 2;
	Dazzled = 3;
	Failed = 4;
}

enum FpgaStatus
{
    UNKNOWN = 0;
	FpgaGood = 1;
	FpgaNotInitialized = 2;
	FpgaError = 3;
}

enum HardwareVersion
{
	Unknown = 0;
	RJ2008 = 1;
	RJ2011 = 2;
	RJ2015 = 3;
}

message Quaternion
{
	required float q0 = 1;
	required float q1 = 2;
	required float q2 = 3;
	required float q3 = 4;
}

message MotorStatuses {
    optional MotorStatus motor1;
    optional MotorStatus motor2;
    optional MotorStatus motor3;
    optional MotorStatus motor4;
    optional MotorStatus dribbler;
}

message RobotRxPacket
{
    optional uint64 timestamp = 1;
    optional uint32 robot_id = 2;
    oneof message {
        RobotStatusMessage robot_status_message = 3;
    }
}
// Packet going out from radio program to control program
message RobotStatusMessage
{
    optional uint32 uid = 1;
    optional uint32 battery_voltage = 2;
	optional MotorStatuses motor_status = 3;
	optional BallSenseStatus ball_sense_status = 4;
	optional uint32 kicker_status = 5;
	optional FpgaStatus fpga_status = 6 [default = Unknown];
	optional HardwareVersion hardware_version = 7 [default = Unknown];
}


// Packet going out from radio program to control program
message RadioRx
{
	required uint64 timestamp = 1;
	required uint32 robot_id = 2;
	optional float rssi = 3;
	optional float battery = 4;
	
	optional BallSenseStatus ball_sense_status = 5;
	
	repeated MotorStatus motor_status = 7;
	repeated int32 encoders = 8;
	
	optional uint32 kicker_status = 9;
	
	optional uint32 kicker_voltage = 11;
	
	optional FpgaStatus fpga_status = 14 [default = FpgaGood];

	optional HardwareVersion hardware_version = 12 [default = Unknown];
	
	optional Quaternion quaternion = 13;
}
