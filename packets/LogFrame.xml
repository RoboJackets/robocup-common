<struct typename="LogFrame" >
	<struct typename="Vision" include_cpp="Vision.hpp" external_cpp="Packet::Vision" external_python="Packet.Vision" />
	<struct typename="Point" include_cpp="Geometry2d/Point.hpp" external_cpp="Geometry2d::Point" external_python="Geometry2d.Point" />
	<struct typename="Segment" include_cpp="Geometry2d/Segment.hpp" external_cpp="Geometry2d::Segment" external_python="Geometry2d.Segment" />
	<struct typename="Polygon" include_cpp="Geometry2d/Polygon.hpp" external_cpp="Geometry2d::Polygon" external_python="Geometry2d.Polygon" />
	<struct typename="Circle" include_cpp="Geometry2d/Circle.hpp" external_cpp="Geometry2d::Circle" external_python="Geometry2d.Circle" />
	<struct typename="RadioTx" include_cpp="RadioTx.hpp" external_cpp="Packet::RadioTx" external_python="Packet.RadioTx"/>
	<struct typename="RadioRx" include_cpp="RadioRx.hpp" external_cpp="Packet::RadioRx" external_python="Packet.RadioRx"/>

    <!-- see Team.h -->
    <enum type="int8" typename="Team" external_cpp="Team" include_cpp="Team.h">
        <constant name="UnknownTeam" value="-1"/>
        <constant name="Yellow" value="0"/>
        <constant name="Blue" value="1"/>
    </enum>

	<enum type="uint8" typename="RunState">
        <constant name="Running"/>
        <constant name="Stopped"/>
    </enum>
    
    <enum type="uint8" typename="ControlState">
        <constant name="Manual"/>
        <constant name="Auto"/>
    </enum>

    <!-- Game state as determined by referee -->
    <struct typename="GameState" external_cpp="GameState" include_cpp="GameState.hpp" />
    
    <!-- Commands for motion -->
		<struct typename="MotionCmd" external_cpp="MotionCmd" include_cpp="MotionCmd.hpp" />

	<!-- post process robot information -->
	<struct typename="Robot" extend_cpp="Framework::Robot" include_cpp="framework/Robot.hpp" >
		<!-- shell id, used for debug -->
		<member type="uint8" name="shell" />

		<!-- position of the robot -->
		<member type="Point" name="pos" />

		<!-- velocity of the robot -->
		<member type="Point" name="vel" />

		<!-- angle of the robot (+- 180 degrees) -->
		<member type="float" name="angle" />

		<!-- angular velocity of the robot degrees/second -->
		<member type="float" name="angleVel" />

    	<!-- MotionCmd Structure -->
    	<member type="MotionCmd" name="cmd" />

		<!-- if true, this robot is active for use -->
		<member type="bool" name="valid" value="false" />
		
		<!--  true if we have the ball -->
		<member type="bool" name="haveBall" value="false" />
		
		<!-- radio tx packet for the robot -->
		<member type="RadioTx::Robot" name="radioTx" />
		
		<!-- radio rx packet for the robot -->
		<member type="RadioRx" name="radioRx" />
		
		<struct typename="Pose">
			<member type="Point" name="pos"/>
			<member type="float" name="angle"/>
		</struct>
		<array type="Pose" name="poseHistory"/>
	</struct>

	<!-- post processed ball information -->
	<struct typename="Ball">
		<member type="Point" name="pos" />
		<member type="Point" name="vel" />
        <member type="Point" name="accel" />

		<member type="bool" name="valid" value="false" />
	</struct>
	
	<!-- game state identification variables -->
	<enum type="uint8" typename="Possession">
		<constant name="OFFENSE"/>
		<constant name="DEFENSE"/>
		<constant name="FREEBALL"/>
	</enum>
	<enum type="uint8" typename="BallFieldPos">
		<constant name="HOMEFIELD"/>
		<constant name="MIDFIELD"/>
		<constant name="OPPFIELD"/>
	</enum>
	<struct typename="GameStateID">
		<member type="Possession" name="posession"/>
		<member type="BallFieldPos" name="field_pos"/>
	</struct>
	<member type="GameStateID" name="stateID"/>
	
	<!-- timestamp of the vision packet that clocked the system -->
	<member type="uint64" name="timestamp" />

	<!-- team we are running as -->
    <member type="Team" name="team" value="UnknownTeam" />

	<member type="ControlState" name="controlState" value="Manual" />
    <member type="RunState" name="runState" value="Stopped" />

	<member type="string" name="playName" />

	<!-- unprocessed vision, in team space -->
	<array type="Packet::Vision" name="rawVision" />

	<member type="GameState" name="gameState"/>

	<!-- array of robots for the system, index is player id -->
	<array size="5" type="Robot" name="self"/>
	<array size="5" type="Robot" name="opp"/>

	<!-- gameplay ball -->
	<member type="Ball" name="ball" />

    <array type="Point" name="pathTest" />
	
	<struct typename="DebugPolygon" extend_cpp="Geometry2d::Polygon">
		<array size="3" type="uint8" name="color" />
	</struct>
	
	<struct typename="DebugLine" extend_cpp="Geometry2d::Segment">
		<array size="3" type="uint8" name="color" />
	</struct>
	
	<struct typename="DebugCircle" extend_cpp="Geometry2d::Circle">
		<array size="3" type="uint8" name="color" />
	</struct>
	
	<struct typename="DebugText">
		<member type="string" name="text"/>
		<member type="Point" name="pos"/>
		<array size="3" type="uint8" name="color" />
	</struct>
	
	<array type="DebugPolygon" name="debugPolygons" />
	<array type="DebugLine" name="debugLines" />
	<array type="DebugCircle" name="debugCircles" />
	<array type="DebugText" name="debugText" />
</struct>
